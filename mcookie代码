#include <Microduino_ColorLED.h> //引用彩灯库
#define PIN       D6         //彩灯引脚
#define Light_PIN A0  //光照传感器接AO引脚
#define NUM 1
#define Light_value1 400
#define Light_value2 800
//光强预设值，把光分为3个阶级，绿<400<蓝<800<红

#include <U8glib.h>//使用OLED需要包含这个头文件
#define INTERVAL_LCD 20 //定义OLED刷新时间间隔 
unsigned long lcd_time = millis(); //OLED刷新时间计时器
U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE); //设置OLED型号 
//-------字体设置，大、中、小
#define setFont_L u8g.setFont(u8g_font_7x13)
#define setFont_M u8g.setFont(u8g_font_osb21)
#define setFont_S u8g.setFont(u8g_font_fixed_v0r)
#define setFont_SS u8g.setFont(u8g_font_04b_03bn)

int sensorValue,test=1;

ColorLED strip = ColorLED(NUM, PIN);  //第一个参数表示最大级联ColorLED个数，第二个参数表示使用的端口。

//温湿度
#include <Microduino_Tem_Hum.h>




Tem_Hum_S2  thermo; //调用Sensor-Tem&Hum传感器


#define temp1    28//#define定义常量
#define temp2    30
#define temp3    32
 
float sensor_tem;//float定义基本数据单精度常量
void TemRead();
//

//rtc模板

#include <Microduino_RTC.h>
#include <TimeLib.h>

//如果开启下面#define set_time的标志，则按照rtcTime中的时间设置RTC模块中的时间
#define set_time

DateTime rtcTime = {2019, 12, 19, 18, 21, 11, 20};//时间格式（年，月，日，时，分，秒）

RTC rtc;
time_t prevDisplay = 0;
//

//读取数据
#include <ESP8266.h>

#ifdef ESP32
#error "This code is not recommended to run on the ESP32 platform! Please check your Tools->Board setting."
#endif

/**
**CoreUSB UART Port: [Serial1] [D0,D1]
**Core+ UART Port: [Serial1] [D2,D3]
**/
#if defined(__AVR_ATmega32U4__) || defined(__AVR_ATmega1284P__) || defined (__AVR_ATmega644P__) || defined(__AVR_ATmega128RFA1__)
#define EspSerial Serial1
#define UARTSPEED  115200
#endif

/**
**Core UART Port: [SoftSerial] [D2,D3]
**/
#if defined (__AVR_ATmega168__) || defined (__AVR_ATmega328__) || defined (__AVR_ATmega328P__)
#include <SoftwareSerial.h>
SoftwareSerial mySerial(2, 3); /* RX:D2, TX:D3 */

#define EspSerial mySerial
#define UARTSPEED  9600
#endif

#define SSID        F("HUAWEI P30")
#define PASSWORD    F("wyy612856wyy")
#define HOST_NAME   F("api.heclouds.com")//域名
#define HOST_PORT   (80)
short open1=120,open2=220,thour=0,tminute=0;
static const byte  GETDATA[]  PROGMEM = {
  "GET https://api.heclouds.com/devices/562167282/datapoints?datastream_id=status,state,hour,minute&limit=1 HTTP/1.1\r\nHost:api.heclouds.com\r\napi-key: dAvEnSiGWxAyDBKAQ8TtZODJqMM=\r\nConnection: close\r\n\r\n"
};//关键头文件
                                                    ESP8266 wifi(&EspSerial);
bool ws=0;
void online()
{
wifi.createTCP(HOST_NAME, HOST_PORT);
 wifi.sendFromFlash(GETDATA, sizeof(GETDATA));
//从Flash读取发送内容，节约内存
  uint8_t buffer[512] = {0};
  uint32_t len = wifi.recv(buffer, sizeof(buffer), 20000);
  if (len > 0) {
    short k=0,temp=0;
    
    Serial.print("Received:[");
    for (uint32_t i = 0; i < len; i++) {
      temp=0;
     
      if((char)buffer[i]=='v'&&(char)buffer[i+1]=='a'&&(char)buffer[i+2]=='l'&&(char)buffer[i+3]=='u'&&(char)buffer[i+4]=='e')
     {
      for( uint32_t j= 0;(char)buffer[i+j+7]<='9'&&(char)buffer[i+j+7]>='0';j++)
      {
      temp=temp*10+(short)buffer[i+j+7]-48;}
      Serial.print("\r\n");
     
     if(k==0)
     thour=temp;//小时
     if(k==1)
     open2=temp;//闹钟 210开   220关
     if(k==2)
     open1=temp;
     if(k==3)
     tminute=temp;//分
      k++;
     
     }
      }
       
       Serial.print(open1);
       Serial.print("\r\n");
       Serial.print(open2);
       Serial.print("\r\n");
        Serial.print(thour);
       Serial.print("\r\n");
       Serial.print(tminute);
     
       Serial.print("]\r\n");
     
      
     }
    
    //delay(300)
    };
    //







void setup()                                //创建无返回值函数
{
  Serial.begin(9600);
  pinMode(Light_PIN,INPUT);
  strip.begin();                 //彩灯初始化
  strip.setBrightness(60);       //设置彩灯亮度
  //温湿度
  thermo.begin();
  
  //rtc
  rtc.begin();
  //如果之前开启了#define set_time的标志，则按照rtcTime中的时间设置RTC模块中的时间
#ifdef set_time
  rtc.clearAll();
  rtc.setDateTime(rtcTime);
#endif
  Serial.println("RTC-time: ");
  rtc.getDateTime(&rtcTime);//获取RTC时间
  serialClockDisplay(rtcTime.year, rtcTime.month, rtcTime.day, rtcTime.hour, rtcTime.minute, rtcTime.second);//打印RTC时间
  setTime(rtcTime.hour, rtcTime.minute, rtcTime.second, rtcTime.day, rtcTime.month, rtcTime.year);//使用RTC时间校准本地时间
  
//读取数据
WifiInit(EspSerial, UARTSPEED);
 WifiInit(EspSerial, UARTSPEED);
  if (wifi.setOprToStationSoftAP()) {} else {}
if (wifi.joinAP(SSID, PASSWORD)) {ws=1;} else {ws=0;}
  if (wifi.disableMUX()) {} else {}
   Serial.println(ws);



};

void loop()                                  //无返回值loop函数
{
  sensorValue = analogRead(Light_PIN);//光检测
  Serial.println(sensorValue);//彩色led灯根据光强调节颜色和亮度
  if (sensorValue < Light_value1){//若光强小于400
    strip.setAllLED(0,map(sensorValue, 10, 400, 0, 255),0); 
    //strip.show();
  }
  //“map(val,x,y,m,n)”函数为映射函数，可将某个区间的值（x-y）变幻成（m-n），val则是你需要用来映射的数据，这里是将10到400的光对应用0到255的绿光标示
  else if (sensorValue >= Light_value1 && sensorValue < Light_value2){//若光强大于400小于800
    strip.setAllLED(0, 0, map(sensorValue, 400, 800, 0, 255)); 
    //strip.show();
  }
  else if (sensorValue >= 800){
    strip.setAllLED(map(sensorValue, 800, 960, 0, 255), 0, 0); 
    //strip.show();
  }

  //温湿度

  TemRead();//调用自定义函数

//读取数据
if(ws==1)
  online();


  //打印
  if(open2==210)
{
//rtc
if (timeStatus() != timeNotSet) {
    //如果本地时间发生变化，则更新串口显示
    if (now() != prevDisplay) {
      prevDisplay = now();
      Serial.println("Location-time: ");
      serialClockDisplay(year(), month(), day(), hour(), minute(), second());
    }
  }



  
  //
  u8g.firstPage();//u8glib规定的写法
 do {
 setFont_S;//选择字体
 u8g.setPrintPos(0,10);
 u8g.print("temp:");
 u8g.setPrintPos(55,10);//选择位置
 u8g.print(sensor_tem);//打印字符串
 u8g.setPrintPos(0,20);//选择位置
 u8g.print("light:");//打印字符串
 u8g.setPrintPos(55,20);
 u8g.print(sensorValue);
  u8g.setPrintPos(0,35);
 u8g.print("state:ON clock:ON");
 u8g.setPrintPos(0,50);
 u8g.print(year());
 u8g.print('/');
 u8g.print(month());
 u8g.print('/');
 u8g.print(day());
  u8g.setPrintPos(0,60);
 u8g.print(hour());
 u8g.print(":");
 u8g.print(minute());
 u8g.print(":");
 u8g.print(second());

 }while( u8g.nextPage() );//u8glib规定的写法
 //闹钟功能
 if(minute()>=tminute)
 {
  strip.setAllLED(255, 0, 0); 
    strip.show();
  }
  //
 
 }else{
  u8g.firstPage();//u8glib规定的写法
 do {
  setFont_L;//选择字体
  u8g.setPrintPos(0,10);
 u8g.print("state:OFF clock:OFF");
 u8g.setPrintPos(0,50);
 u8g.print(year());
 u8g.print('/');
 u8g.print(month());
 u8g.print('/');
 u8g.print(day());
  u8g.setPrintPos(0,60);
 u8g.print(hour());
 u8g.print(":");
 u8g.print(minute());
 u8g.print(":");
 u8g.print(second());
  } while( u8g.nextPage() );//u8glib规定的写法
  strip.setAllLED(0, 0, 0); 
    strip.show();
 
 }
 //


 
}


void TemRead()
{
  sensor_tem = thermo.getTemperature();//把获得的温度值赋给变量sensor_tem
}

//
//*****串口打印日期时间*****
void serialClockDisplay(int _year, int _month, int _day, int _hour, int _minute, int _second) {
  if (_year < 1000) {
    Serial.print("20");
  }
  Serial.print(_year, DEC);
  Serial.print('/');
  if (_month < 10) {
    Serial.print("0");
  }
  Serial.print(_month, DEC);
  Serial.print('/');
  if (_day < 10) {
    Serial.print("0");
  }
  Serial.print(_day, DEC);
  Serial.print("   ");
  Serial.print(_hour, DEC);
  Serial.print(':');
  if (_minute < 10) {
    Serial.print("0");
  }
  Serial.print(_minute, DEC);
  Serial.print(':');
  if (_second < 10) {
    Serial.print("0");
  }
  Serial.println(_second, DEC);
  Serial.println();
}

 
